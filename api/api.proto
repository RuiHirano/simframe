syntax = "proto3";

package api;

option go_package="./api";

service MasterService {
    rpc RegisterWorker(RegisterWorkerRequest) returns (RegisterWorkerResponse){}
    rpc UpdateWorker(UpdateWorkerRequest) returns (UpdateWorkerResponse){}
}

message RegisterWorkerRequest{
    Worker worker = 1;
}

message RegisterWorkerResponse{
}

message UpdateWorkerRequest{
    Worker worker = 1;
}

message UpdateWorkerResponse{
}

service WorkerService {
    rpc RunWorker(RunWorkerRequest) returns (RunWorkerResponse){}
    rpc GetAgents(GetAgentsRequest) returns (GetAgentsResponse){}
}

message RunWorkerRequest{
}

message RunWorkerResponse{
}

message GetAgentsRequest{
}

message GetAgentsResponse{
    repeated Agent agents = 1;
}


message Master {
    uint64 id = 1;
	string server_address = 2;
}

message Worker {
    uint64 id = 1;
	string server_address = 2;
    repeated Worker neighbor_workers = 3;
}


message BasicResponse {
    StatusType status = 1;
}

enum StatusType {
    OK = 0;
    ERROR = 1;
}

service EngineService {
    rpc GetStatus(GetStatusRequest) returns (GetStatusResponse){}
}

message GetStatusRequest{
}

message GetStatusResponse{
    Config config = 1;
    repeated Scenario scenarios = 2;
}


message App {
	uint64 id = 1;
	Config config = 2;
	repeated Scenario scenarios = 3;
}

message Scenario {
	uint64 id = 1;
	uint64 name = 2;
	repeated Agent agents = 3;
	Clock clock = 4;
	Area area = 6;
}

message Config {
	uint64 server_num = 1;
}

message Agent {
	uint64 id = 1;
	Position position = 2;
}

message Area {
    Space space = 1;
}

message Space {
    float min_x = 1;
    float min_y = 2;
    float max_x = 3;
    float max_y = 4;
}

message Clock {
    uint64 timestamp = 1;
}

message SimFrameConfig {
	string name = 1;
	string version = 2;
	string entry = 3;
}

message Position {
	float x = 1;
	float y = 2;
}
